{
  "swagger" : "2.0",
  "info" : {
    "description" : "Shoppinglist API documentation",
    "version" : "1.0",
    "title" : "shoppinglist",
    "contact" : {
      "email" : "gideonkimutai9@gmail.com"
    }
  },
  "host" : "shoppinglistapiapp.herokuapp.com",
  "basePath" : "/api/v1.0",
  "schemes" : [ "http", "https" ],
  "paths" : {
    "/auth/register" : {
      "post" : {
        "tags" : [ "Auth" ],
        "summary" : "Create user object",
        "description" : "",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json", "text/plain; charset=utf-8" ],
        "parameters" : [ {
          "name" : "username",
          "in" : "formData",
          "description" : "",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "email",
          "in" : "formData",
          "description" : "",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "password",
          "in" : "formData",
          "description" : "",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "confirm",
          "in" : "formData",
          "description" : "",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "201" : {
            "description" : "user account created"
          },
          "400" : {
            "description" : "passwords do not match"
          },
          "401" : {
            "description" : "authorization required"
          },
          "409" : {
            "description" : "username or email exists"
          },
          "422" : {
            "description" : "missing data or invalid data"
          }
        }
      }
    },
    "/auth/login" : {
      "post" : {
        "tags" : [ "Auth" ],
        "summary" : "Login user object",
        "description" : "Takes username and password and returns auth_token",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json", "text/plain; charset=utf-8" ],
        "parameters" : [ {
          "name" : "username",
          "in" : "formData",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "password",
          "in" : "formData",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful login"
          },
          "401" : {
            "description" : "username and password do not match or username and password required"
          }
        }
      }
    },
    "/auth/logout" : {
      "delete" : {
        "tags" : [ "Auth" ],
        "summary" : "Blacklists user auth_token",
        "description" : "Logs out user object by blacklisting user auth_token",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "User object logged out"
          },
          "401" : {
            "description" : "auth token error, login again"
          }
        },
        "security" : [ {
          "access-token" : [ ]
        } ]
      }
    },
    "/auth/reset-password" : {
      "post" : {
        "tags" : [ "Auth" ],
        "summary" : "Retrieve reset password token",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "email",
          "in" : "formData",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "reset password sent"
          },
          "409" : {
            "description" : "email does not exist"
          },
          "422" : {
            "description" : "invalid or missing email"
          }
        }
      }
    },
    "/auth/reset-password/process" : {
      "post" : {
        "tags" : [ "Auth" ],
        "summary" : "Reset user password",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "username",
          "in" : "formData",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "new_password",
          "in" : "formData",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "confirm",
          "in" : "formData",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "reset_token",
          "in" : "formData",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "password changed successfully"
          },
          "401" : {
            "description" : "passwords do not match"
          },
          "409" : {
            "description" : "email does not exist"
          },
          "422" : {
            "description" : "missing reset token or invalid reset token or expired reset token"
          }
        }
      }
    },
    "/auth/users" : {
      "get" : {
        "tags" : [ "Auth" ],
        "summary" : "Retrieve user object",
        "description" : "",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation"
          },
          "401" : {
            "description" : "token expired or missing authorization header"
          },
          "422" : {
            "description" : "Bad authorization header"
          },
          "500" : {
            "description" : "server error"
          }
        },
        "security" : [ {
          "access-token" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Auth" ],
        "summary" : "Updates user object",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "username",
          "in" : "formData",
          "description" : "Update user account",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful update of user account"
          },
          "401" : {
            "description" : "authorization required"
          },
          "409" : {
            "description" : "username exists"
          },
          "422" : {
            "description" : "Bad authorization header or invalid username"
          }
        },
        "security" : [ {
          "access-token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Auth" ],
        "summary" : "deletes user object",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "password",
          "in" : "formData",
          "description" : "Password of user",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "User object deleted successfully"
          },
          "401" : {
            "description" : "Authorization required"
          },
          "409" : {
            "description" : "Passwords do not match"
          },
          "422" : {
            "description" : "Bad authorization header"
          }
        },
        "security" : [ {
          "access-token" : [ ]
        } ]
      }
    },
    "/shopping-lists" : {
      "get" : {
        "tags" : [ "Shoppinglists" ],
        "summary" : "retrieve all shopping lists",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "number of results to produce",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "page number",
          "required" : false,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully fetched all shopping lists"
          },
          "401" : {
            "description" : "authorization required"
          },
          "422" : {
            "description" : "error in query parameters"
          }
        },
        "security" : [ {
          "access-token" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Shoppinglists" ],
        "summary" : "creates shoppinglist object",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "formData",
          "description" : "name of shoppinglist",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "description",
          "in" : "formData",
          "description" : "optional description of the shoppinglist",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "201" : {
            "description" : "shoppinglist created successfully"
          },
          "401" : {
            "description" : "Authorization header required"
          },
          "409" : {
            "description" : "shopping list already exists"
          },
          "422" : {
            "description" : "unprocessed header or missing shoppinglist name or invalid shoppinglist name"
          }
        },
        "security" : [ {
          "access-token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Shoppinglists" ],
        "summary" : "Remove all shoppinglists objects at once",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "password",
          "in" : "formData",
          "description" : "password of user",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "shoppinglists removed successfully"
          },
          "403" : {
            "description" : "Incorrect password"
          },
          "404" : {
            "description" : "shoppinglist empty"
          }
        },
        "security" : [ {
          "access-token" : [ ]
        } ]
      }
    },
    "/shopping-lists/{ID}" : {
      "get" : {
        "tags" : [ "Shoppinglists" ],
        "summary" : "Retrieve a single shoppinglist object",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "ID",
          "in" : "path",
          "description" : "shoppinglist object ID",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "shoppinglist object retrieved"
          },
          "401" : {
            "description" : "missing authorization header"
          },
          "404" : {
            "description" : "shoppinglist object not found"
          }
        },
        "security" : [ {
          "access-token" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Shoppinglists" ],
        "summary" : "update shoppinglist object",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "ID",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "name",
          "in" : "formData",
          "description" : "new name of shoppinglist",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "description",
          "in" : "formData",
          "description" : "new description of shoppinglist",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "shoppinglist object updated or shoppinglist not updated"
          },
          "401" : {
            "description" : "missing authorization header"
          },
          "404" : {
            "description" : "shoppinglist object not found"
          },
          "409" : {
            "description" : "shoppinglist object exists"
          },
          "422" : {
            "description" : "invalid shoppinglist name"
          }
        },
        "security" : [ {
          "access-token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Shoppinglists" ],
        "summary" : "deletes shoppinglist object",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "ID",
          "in" : "path",
          "description" : "shoppinglist object ID",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "name",
          "in" : "formData",
          "description" : "name of shoppinglist",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "shoppinglist object deleted"
          },
          "404" : {
            "description" : "shoppinglist object not found"
          }
        },
        "security" : [ {
          "access-token" : [ ]
        } ]
      }
    },
    "/shopping-lists/{shoppinglistId}/shopping-items" : {
      "get" : {
        "tags" : [ "Shoppinglists" ],
        "summary" : "retrieve all shoppingitems objects",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "shoppinglistId",
          "in" : "path",
          "description" : "shoppinglist object ID",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "limit the number of shoppingitems objects",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "jump to page number according to the results returned",
          "required" : false,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "shoppingitems objects retrieved"
          },
          "401" : {
            "description" : "missing authorization header"
          },
          "404" : {
            "description" : "shoppinglist object not found"
          }
        },
        "security" : [ {
          "access-token" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Shoppinglists" ],
        "summary" : "create shoppingitem object",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "shoppinglistId",
          "in" : "path",
          "description" : "ID of shoppinglist object",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "name",
          "in" : "formData",
          "description" : "name of item",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "price",
          "in" : "formData",
          "description" : "item price",
          "required" : true,
          "type" : "number"
        }, {
          "name" : "quantity_description",
          "in" : "formData",
          "description" : "item description",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "201" : {
            "description" : "shoppingitem object created"
          },
          "401" : {
            "description" : "missing authorization header"
          },
          "404" : {
            "description" : "shoppinglist object not found"
          }
        },
        "security" : [ {
          "access-token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Shoppinglists" ],
        "summary" : "delete all shoppingitems",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "shoppinglistId",
          "in" : "path",
          "description" : "ID of shoppinglist object",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "password",
          "in" : "formData",
          "description" : "user password",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "all items deleted"
          },
          "403" : {
            "description" : "incorrect password"
          },
          "404" : {
            "description" : "shoppinglis not found or empty shoppinglist"
          }
        },
        "security" : [ {
          "access-token" : [ ]
        } ]
      }
    },
    "/shopping-lists/{shoppinglistId}/shopping-items/{shoppingitemId}" : {
      "get" : {
        "tags" : [ "Shoppinglists" ],
        "summary" : "retrieve single shoppingitem object",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "shoppinglistId",
          "in" : "path",
          "description" : "shoppinglist object ID",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "shoppingitemId",
          "in" : "path",
          "description" : "shoppingitem object ID",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "shoppingitem object retrieved"
          },
          "401" : {
            "description" : "authorization header required"
          },
          "404" : {
            "description" : "shoppingitem object not found"
          }
        },
        "security" : [ {
          "access-token" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Shoppinglists" ],
        "summary" : "update shoppingitem object",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "shoppinglistId",
          "in" : "path",
          "description" : "shoppinglist object ID",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "shoppingitemId",
          "in" : "path",
          "description" : "shoppingitem object ID",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "name",
          "in" : "formData",
          "description" : "name of item",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "price",
          "in" : "formData",
          "description" : "item price",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "quantity_description",
          "in" : "formData",
          "description" : "item description",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "bought",
          "in" : "formData",
          "description" : "mark item as bought or not bought",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "shoppingitem object updated"
          },
          "401" : {
            "description" : "Authorization header required"
          },
          "404" : {
            "description" : "shoppinglist or shoppingitem object not found"
          }
        },
        "security" : [ {
          "access-token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Shoppinglists" ],
        "summary" : "delete shoppingitem object",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "shoppinglistId",
          "in" : "path",
          "description" : "shoppinglist object ID",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "shoppingitemId",
          "in" : "path",
          "description" : "shoppingitem object ID",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "name",
          "in" : "formData",
          "description" : "name of item",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "shoppingitem object deleted"
          },
          "401" : {
            "description" : "authorization header required"
          },
          "404" : {
            "description" : "shoppinglist or shoppingitem object not found"
          }
        },
        "security" : [ {
          "access-token" : [ ]
        } ]
      }
    },
    "/shopping-lists/search" : {
      "get" : {
        "tags" : [ "Search" ],
        "summary" : "search shoppinglists objects",
        "description" : "search and retrieves shoppinglist objects that match the query keyword",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "q",
          "in" : "query",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "number of results to produce",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "page number",
          "required" : false,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "search results found"
          },
          "401" : {
            "description" : "authorization header required"
          },
          "422" : {
            "description" : "query keyword missing"
          }
        },
        "security" : [ {
          "access-token" : [ ]
        } ]
      }
    }
  },
  "securityDefinitions" : {
    "access-token" : {
      "type" : "apiKey",
      "name" : "x-access-token",
      "in" : "header"
    }
  },
  "definitions" : { }
}